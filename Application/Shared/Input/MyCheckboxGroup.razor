@using System.Linq;
@typeparam TCheck
@inherits InputBase<List<TCheck>>

<div class="form-check">
    <fieldset>
        <legend>@DisplayName</legend>
        @foreach (var option in Options)
        {
            <label>
                <InputCheckbox type="checkbox" name="@FieldIdentifier.FieldName" @bind-Value="option.OptionChecked" @onchange="Callback"/>
                @option.Label
            </label>
        }
    </fieldset>
</div>

@code {

    [Parameter]
    public List<OptionItem> Options { get; set; } = new();

    private void Callback(ChangeEventArgs args)
    {
        Value = Options.Where(x => x.OptionChecked).Select(x => x.Value).ToList();
    }

    public class OptionItem
    {
        public OptionItem(string label, TCheck value, bool optionChecked)
        {
            Label = label;
            Value = value;
            OptionChecked = optionChecked;
        }

        public string Label { get; set; }

        public TCheck Value { get; set; }

        public bool OptionChecked { get; set; }
    }

    protected override bool TryParseValueFromString(
        string? value,
        out List<TCheck> result,
        out string validationErrorMessage)
    {
        Console.WriteLine(value);
        // var success = BindConverter.TryConvertTo<TValue>(
        //     value, CultureInfo.CurrentCulture, out var parsedValue);
        // if (success)
        // {
        //     result = parsedValue!;
        //     errorMessage = null!;
        //
        //     return true;
        // }
        result = default!;
        validationErrorMessage = $"{FieldIdentifier.FieldName} не получилось конвертировать.";

        return false;
    }

}