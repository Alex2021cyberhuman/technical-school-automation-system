@using System.Globalization
@typeparam TValue
@inherits InputBase<TValue>

<input @attributes="AdditionalAttributes" type="radio" value="@SelectedValue" 
       checked="@(SelectedValue?.Equals(Value) ?? false)" @onchange="OnChange" />

@code {

    [Parameter]
    public TValue SelectedValue { get; set; } = default!;

    private void OnChange(ChangeEventArgs args)
    {
        CurrentValueAsString = args.Value?.ToString();
    }

    protected override bool TryParseValueFromString(string value, 
        out TValue result, out string errorMessage)
    {
        var success = BindConverter.TryConvertTo<TValue>(
            value, CultureInfo.CurrentCulture, out var parsedValue);
        if (success)
        {
            result = parsedValue!;
            errorMessage = null!;

            return true;
        }
        result = default!;
        errorMessage = $"{FieldIdentifier.FieldName} не получилось конвертировать.";

        return false;
    }
}