@inherits MudSelect<int>

<MudField Label="Год">
    <MudSelect T="int" AnchorOrigin="Origin.BottomCenter" ValueChanged="ValueChanged" ToStringFunc="GetYearString">
        @foreach (var year in Years)
        {
            <MudSelectItem Value="@year"/>
        }
    </MudSelect>
</MudField>

@code
{
    [Parameter]
    public int MinimalYear { get; set; } = 1949;

    [Parameter]
    public int MaximumYear { get; set; } = DateTime.Now.Year;

    public List<int> Years => Enumerable.Range(MinimalYear, MaximumYear - MinimalYear + 1).ToList();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Value == default)
        {
            Value = MaximumYear;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            await base.OnAfterRenderAsync(firstRender);
        }
        catch (JSException e)
        {
    // NOOP
        }
    }

    private string GetYearString(int year)
    {
        return year == default ? string.Empty : year.ToString();
    }
}