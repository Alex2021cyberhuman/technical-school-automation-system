@using System.Security.Claims
@using Application.Access.Enums
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Система «Техникум»</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Главная
            </NavLink>
        </div>
        @if (CurrentUser.IsInPolicy(PolicyIdentifiers.Administration))
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="/manage/users" Match="NavLinkMatch.All">
                    Управление пользователями
                </NavLink>
            </div>
            <hr/>
        }
        @if (CurrentUser.Identity?.IsAuthenticated ?? false)
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="/specialities" Match="NavLinkMatch.All">
                    Специальности и Дисциплины
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="/cabinets" Match="NavLinkMatch.All">
                    Кабинеты
                </NavLink>
            </div>
            <hr/>
            <div class="nav-item">
                <NavLink class="nav-link" href="/groups" Match="NavLinkMatch.All">
                    Группы
                </NavLink>
            </div>
            <hr/>
        }
        @if (CurrentUser.IsInPolicy(PolicyIdentifiers.ScheduleManagers))
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="/schedule/manage" Match="NavLinkMatch.All">
                    Управление расписанием
                </NavLink>
            </div>
        }
        <div class="nav-item">
            <NavLink class="nav-link" href="/schedule/" Match="NavLinkMatch.All">
                Расписание
            </NavLink>
        </div>
        <hr/>
        @if (CurrentUser.IsInPolicy(PolicyIdentifiers.AdmissionCommittee))
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="/applicants" Match="NavLinkMatch.All">
                    Список Абитуриентов
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="/applicants/create" Match="NavLinkMatch.All">
                    Новый Абитуриент
                </NavLink>
            </div>
            <hr/>
        }
        @if (CurrentUser.IsInPolicy(PolicyIdentifiers.Teachers))
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="/load" Match="NavLinkMatch.All">
                    Нагрузки
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="/proofreading" Match="NavLinkMatch.All">
                    Вычитка часов преподавателям
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="/schedule/teacher" Match="NavLinkMatch.All">
                    Расписание учителя
                </NavLink>
            </div>
        }
        @if (!CurrentUser.Identity?.IsAuthenticated ?? false)
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="/Access/Login" Match="NavLinkMatch.All">
                    Вход
                </NavLink>
            </div>
        }
        @if (CurrentUser.Identity?.IsAuthenticated ?? false)
        {
            <div class="nav-item">
                <form action="/access/logout" method="post">

                    <button type="submit" class="nav-link">Выход</button>

                </form>
            </div>
        }

    </nav>
</div>

@code {

    private ClaimsPrincipal CurrentUser { get; set; } = new();

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;

    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        CurrentUser = (await AuthenticationStateTask).User;
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

}